register_eqc.erl:

[{scenario,[{call,register_eqc,new_process,[]},
            {call,register_eqc,register,[e,{var,2}]},
            {call,erlang,whereis,[e]}]},
 {scenario,[{call,register_eqc,new_process,[]},
            {call,register_eqc,register,[a,{var,1}]},
            {call,register_eqc,register,[a,{var,1}]}]},
 {scenario,[{call,register_eqc,new_process,[]},
            {call,register_eqc,register,[a,{var,11}]}]},
 {scenario,[{call,erlang,whereis,[a]}]},
 {scenario,[{call,register_eqc,new_process,[]}]},
 {scenario,[{call,register_eqc,unregister,[a]}]}]

Scenario:
  GIVEN new_process
    AND register e {var, 2}
   WHEN whereis(e)
   THEN {var, 2} [from the postcondition of whereis(e) (!)]

{scenario,[{call,register_eqc,new_process,[]},
            {call,register_eqc,register,[e,{var,2}]},
            {call,erlang,whereis,[e]}]}

---

simple_eqc.erl:

{scenario,[{0, []}]}

Scenario: 
  GIVEN integer 0
    AND empty list
   WHEN not lists:member(Integer 0, lists:delete(0, []))
   THEN true
